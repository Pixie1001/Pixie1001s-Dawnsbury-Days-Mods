using System;
using System.Collections.Generic;
using System.Collections;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using System.Reflection;
using System.Reflection.Emit;
using System.Threading;
using Dawnsbury.Audio;
using Dawnsbury.Auxiliary;
using Dawnsbury.Core;
using Dawnsbury.Core.Mechanics.Rules;
using Dawnsbury.Core.Animations;
using Dawnsbury.Core.CharacterBuilder;
using Dawnsbury.Core.CharacterBuilder.AbilityScores;
using Dawnsbury.Core.CharacterBuilder.Feats;
using Dawnsbury.Core.CharacterBuilder.FeatsDb.Common;
using Dawnsbury.Core.CharacterBuilder.FeatsDb.Spellbook;
using Dawnsbury.Core.CharacterBuilder.FeatsDb.TrueFeatDb;
using Dawnsbury.Core.CharacterBuilder.Selections.Options;
using Dawnsbury.Core.CharacterBuilder.Spellcasting;
using Dawnsbury.Core.CombatActions;
using Dawnsbury.Core.Coroutines;
using Dawnsbury.Core.Coroutines.Options;
using Dawnsbury.Core.Coroutines.Requests;
using Dawnsbury.Core.Creatures;
using Dawnsbury.Core.Creatures.Parts;
using Dawnsbury.Core.Intelligence;
using Dawnsbury.Core.Mechanics;
using Dawnsbury.Core.Mechanics.Core;
using Dawnsbury.Core.Mechanics.Enumerations;
using Dawnsbury.Core.Mechanics.Targeting;
using Dawnsbury.Core.Mechanics.Targeting.TargetingRequirements;
using Dawnsbury.Core.Mechanics.Targeting.Targets;
using Dawnsbury.Core.Mechanics.Treasure;
using Dawnsbury.Core.Possibilities;
using Dawnsbury.Core.Roller;
using Dawnsbury.Core.StatBlocks;
using Dawnsbury.Core.StatBlocks.Description;
using Dawnsbury.Core.Tiles;
using Dawnsbury.Display;
using Dawnsbury.Display.Illustrations;
using Dawnsbury.Display.Text;
using Dawnsbury.IO;
using Dawnsbury.Modding;
using Dawnsbury.ThirdParty.SteamApi;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using static System.Collections.Specialized.BitVector32;
using System.Diagnostics;
using static System.Net.Mime.MediaTypeNames;
using System.Runtime.Intrinsics.Arm;
using System.Xml;
using Dawnsbury.Core.Mechanics.Damage;
using System.Runtime.CompilerServices;
using System.ComponentModel.Design;
using System.Text;
using static Dawnsbury.Core.CharacterBuilder.FeatsDb.TrueFeatDb.BarbarianFeatsDb.AnimalInstinctFeat;
using static System.Runtime.InteropServices.JavaScript.JSType;
using System.Diagnostics.Metrics;
using Microsoft.Xna.Framework.Audio;
using static System.Reflection.Metadata.BlobBuilder;
using Dawnsbury.Core.CharacterBuilder.FeatsDb;
using Dawnsbury.Campaign.Encounters;
using Dawnsbury.Core.Animations.Movement;
using static Dawnsbury.Mods.Creatures.RoguelikeMode.Ids.ModEnums;

namespace Dawnsbury.Mods.Creatures.RoguelikeMode.Ids {
    [System.Runtime.Versioning.SupportedOSPlatform("windows")]
    internal static class QEffectIds {

        internal static QEffectId LethargyPoison { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_Drow Lethargy Poison");
        internal static QEffectId AbyssalRot { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_Abyssal Rot");
        internal static QEffectId Lurking { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_Lurking");
        internal static QEffectId Stalked { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_Stalked");
        internal static QEffectId ExtraTurn { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_ExtraTurnMiniBoss");
        internal static QEffectId DrowClergy { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_DrowClergy");
        internal static QEffectId BloodBond { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_BloodBond");
        internal static QEffectId Harvested { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_Harvested");
        internal static QEffectId Hazard { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_Hazard");
        internal static QEffectId MushroomInoculation { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_MushroomInoculation");
        internal static QEffectId ChokingMushroomSporeCloud { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_ChokingMushroomSporeCloud");
        internal static QEffectId ShifterFurs { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_ShifterFurs");
        internal static QEffectId HomunculusMaster { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_HomunculusMaster");
        internal static QEffectId HomunculusPoison { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_HomunculusPoison");
        internal static QEffectId MarkQuarry { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_MarkQuarry");
        internal static QEffectId LoosenedGrip { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_LoosenedGrip");
        internal static QEffectId BloodcurdlingScreechImmunity { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_BloodcurdlingScreechImmunity");
        internal static QEffectId CommandSwarm { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_CommandSwarm");
        internal static QEffectId RatFamiliar { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_RatFamiliar");
        internal static QEffectId RatPlague { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_RatPlague");
        internal static QEffectId Exhausted { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_Exhausted");
        internal static QEffectId SigbinStenchImmunity { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_SigbinStenchImmunity");
        internal static QEffectId Parry { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_Parry");
        internal static QEffectId SerpentVenom { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_SerpentVenom");
        internal static QEffectId ShootingStarStance { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_ShootingStarStance");
        internal static QEffectId MonasticArcherStance { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_MonasticArcherStance");
        internal static QEffectId ShadowSlip { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_ShadowSlip");
        internal static QEffectId ShadowWebSickness { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_ShadowWebSickness");
        internal static QEffectId WebWardensCurse { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_WebWardensCurse");
        internal static QEffectId ImpendingPandemonium { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_ImpendingPandemonium");
        internal static QEffectId BlessedOfEchidna { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_BlessedOfEchidna");
        internal static QEffectId MonstrousGift { get; } = ModManager.RegisterEnumMember<QEffectId>("RL_MonstrousGift");

        // Tile Effects IDs
        internal static TileQEffectId ChokingSpores { get; } = ModManager.RegisterEnumMember<TileQEffectId>("RL_Choking Spores");
        internal static TileQEffectId Maelstrom { get; } = ModManager.RegisterEnumMember<TileQEffectId>("RL_Maelstrom");
    }
}
